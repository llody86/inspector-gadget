{"version":3,"sources":["components/Scene/styled.js","components/Scene/Scene.js","context/AudioPlayerContext.js","components/Panel/styled.js","components/Panel/Panel.js","components/InteractiveObject/styled.js","components/InteractiveObject/InteractiveObject.js","components/Message/styled.js","components/Message/Message.js","components/StaticObject/styled.js","components/StaticObject/StaticObject.js","components/IconButton/styled.js","components/IconButton/IconButton.js","components/ModelViewerObject/styled.js","components/ModelViewerObject/ModelViewerObject.js","App.js","serviceWorker.js","index.js"],"names":["SceneContainer","styled","div","props","colour","isActive","align","Scene","React","createContext","useEffect","initScene","killScene","sceneColour","children","Panel","width","height","bgColour","isVisible","direction","wrap","marginRect","pointerNone","InteractiveObject","xpos","ypos","zindex","InteractiveObjectImage","img","id","onClick","alt","src","imgSrc","MessageText","p","textColour","fontSize","bold","Message","messageText","StaticGroup","StaticObject","IconButtonContainer","IconButton","color","size","icon","Container","Hotspot","button","Annotation","ModelViewerObject","useState","selectedHotspotId","setSelectedHotspotId","initialHotspot","ar","camera-controls","hotspots","map","hotspot","index","hotspotId","console","log","slot","className","position","normal","text","library","add","faSyncAlt","faChevronCircleRight","faChevronCircleLeft","faCheckCircle","faInfo","AppContainer","AppAlertMessageContainer","DisplayInLandscapeOnly","AppHeader","header","AppAlertMessage","StyledLogo","App","selectedCharacter","setSelectedCharacter","currentSceneId","setCurrentSceneId","viewingObject","setViewingObject","setSelectedObject","currentQuestionId","charactersList","name","prof","gender","x","y","objectsList","modelsList","model","audio","questionsList","questionText","answerText","getCurrentScene","scenesList","getCurrentQuestion","IntroScene","Id","char","key","objID","DoctorScene","obj","FindScene","objectId","LogoScene","SuccessScene","sceneContent","sceneId","scene","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.bb3d7d1c.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const SceneContainer = styled.div`\n    position: relative;\n    width: 100%;\n    height: 100vh;\n    background-color: ${props => props.colour};\n    display: ${props => props.isActive ? \"flex\" : \"none\"};\n    flex-direction: column;\n    justify-content: center;\n    align-items: ${props => props.align ? props.align : \"center\"};\n`;","import React, { useEffect, useState } from \"react\";\nimport * as Styled from \"./styled\";\nimport TrackList from \"../TrackList/TrackList\"\n\nconst Scene = (props) => {\n    //const [isActive, setIsActive] = useState(false);\n    //TODO: AUDIO\n    //TODO: TRANSITIONS\n    \n    useEffect(() => {\n        //effect\n        if(props.isActive) {\n            initScene();\n        }\n        return () => {\n            killScene();\n        }\n    }, []);\n\n    const initScene = () => {\n        //TODO: AUDIO and other inits\n    }\n\n    const killScene = () => {\n        //if any audio, kill it.\n        //if any animation, kill it.\n        //kill all listeners etc.\n    }\n\n    return (\n        <Styled.SceneContainer align={props.align} isActive={props.isActive} colour={props.sceneColour ? props.sceneColour : \"transparent\"}>\n            {props.children}\n            {//TODO: Add a track list\n            }\n        </Styled.SceneContainer>\n    )\n}\n\nexport default Scene;","import React, { useState } from \"react\";\n\nconst AudioPlayerContext = React.createContext([{}, () => {}]);\n\nconst AudioPlayerProvider = (props) => {\n\n    const [state, setState] = useState({});\n\n\n    return (\n        <AudioPlayerContext.Provider value={[state, setState]}>\n            {props.children}\n        </AudioPlayerContext.Provider>\n    )\n}\n\nexport { AudioPlayerContext, AudioPlayerProvider }\n","import styled from \"styled-components\"\n\n\nexport const Panel = styled.div`\n    width: ${props => props.width ? props.width : \"80%\"};\n    height: ${props => props.height ? props.height : \"80%\"};\n    background-color: ${props => props.bgColour ? props.bgColour : \"#64C9C9\"};\n    border-radius: 10px;\n    box-shadow: 4px 4px 6px 0px rgba(0,0,0,0.15);\n    display: ${props => props.isVisible ? \"flex\" : \"none\"};\n    flex-direction: ${props => props.direction ? props.direction : \"row\"};\n    flex-wrap: ${props => props.wrap ? props.wrap : \"no-wrap\"};\n    justify-content: center;\n    align-items: center;\n    margin: ${props => props.marginRect ? props.marginRect : \"0\"};\n    z-index: 50;\n    padding: 10px;\n    ${props => props.pointerNone && `\n        pointer-events: none;\n    `};\n`","import React from \"react\"\nimport * as Styled from \"./styled\";\n\n\nconst Panel = (props) => {\n    return (\n        <Styled.Panel pointerNone={props.pointerNone} wrap={props.wrap} direction={props.direction} marginRect={props.marginRect} bgColour={props.bgColour} width={props.width} height={props.height} isVisible={props.isVisible}>\n            {props.children}\n        </Styled.Panel>\n    )\n}\n\nexport default Panel;","import styled from \"styled-components\";\n\nexport const InteractiveObject = styled.div`\n    position: absolute;\n    left: ${props => props.xpos};\n    top: ${props => props.ypos};\n    z-index: ${props => props.zindex};\n    width: ${props => props.width};\n    height: ${props => props.height};\n`;\n    \nexport const InteractiveObjectImage = styled.img`\n    width: 100%;\n    height: 100%;\n`","import React from \"react\";\nimport * as Styled from \"./styled\";\n\nconst InteractiveObject = (props) => {\n    return (\n        <Styled.InteractiveObject id={props.id} xpos={props.xpos} ypos={props.ypos} width={props.width} height={props.height} onClick={props.onClick} zindex={props.zindex}>\n            <Styled.InteractiveObjectImage alt=\"this is an image\" src={props.imgSrc}/>\n        </Styled.InteractiveObject>\n    )\n}\n\nexport default InteractiveObject;","import styled from \"styled-components\";\n\nexport const MessageText = styled.p`\n    font-family: inherit;\n    color: ${props => props.textColour ? props.textColour : \"white\"};\n    margin: 0;\n    font-size: 2rem;\n    ${props => props.fontSize === \"small\" && `\n        font-size: 1.2rem;\n    `}\n    ${props => props.fontSize === \"medium\" && `\n        font-size: 1.5rem;\n    `}\n    ${props => props.fontSize === \"large\" && `\n        font-size: 2rem;\n    `}\n    font-weight: ${props => props.bold ? \"700\" : \"400\"};\n`","import React from \"react\";\nimport * as Styled from \"./styled\";\n\nconst Message = (props) => {\n    return (\n        <Styled.MessageText textColour={props.textColour} bold={props.bold} fontSize={props.fontSize}>{props.messageText}</Styled.MessageText>\n    )\n}\n\nexport default Message;","import styled from \"styled-components\";\n\n\nexport const StaticGroup = styled.div`\n    position: absolute;\n    left: ${props => props.xpos ? props.xpos : \"0px\"};\n    top: ${props => props.ypos ? props.ypos : \"0px\"};\n    width: ${props => props.width ? props.width : \"auto\"};\n    height: ${props => props.height ? props.height : \"auto\"};\n    z-index: ${props => props.zindex};\n    display: block;\n    ${props => props.isVisible === false && `\n        display: none;\n    `};\n`;\n\nexport const StaticObject = styled.img`\n    position: absolute;\n    left: ${props => props.xpos ? props.xpos : \"0px\"};\n    top: ${props => props.ypos ? props.ypos : \"0px\"};\n    width: ${props => props.width ? props.width : \"auto\"};\n    height: ${props => props.height ? props.height : \"auto\"};\n    z-index: ${props => props.zindex};\n    pointer-events: none;\n    display: block;\n    ${props => props.isVisible === false && `\n        display: none;\n    `};\n`;","import React from \"react\";\nimport * as Styled from \"./styled\";\n\nconst StaticObject = (props) => {\n    return (\n        <Styled.StaticObject alt=\"this is an image\" isVisible={props.isVisible} xpos={props.xpos} ypos={props.ypos} width={props.width} height={props.height} src={props.imgSrc} zindex={props.zindex}/>\n    )\n}\n\nconst StaticGroup = (props) => {\n    return(\n        <Styled.StaticGroup isVisible={props.isVisible} xpos={props.xpos} ypos={props.ypos} width={props.width} height={props.height} zindex={props.zindex}>\n            {props.children}\n        </Styled.StaticGroup>\n    )\n}\n\nexport { StaticObject, StaticGroup} ;","import styled from \"styled-components\";\n\nexport const IconButtonContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: auto;\n    height: auto;\n    margin: ${props => props.marginRect ? props.marginRect : \"0\"};\n`;","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport * as Styled from \"./styled\";\n\nconst IconButton = (props) => {\n    return (\n        <Styled.IconButtonContainer onClick={props.onClick} marginRect={props.marginRect}>\n            <FontAwesomeIcon color=\"#ffffff\" size={\"2x\"} icon={props.icon}/>\n        </Styled.IconButtonContainer>\n    )\n}\n\nexport default IconButton;","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n    width:100%;\n    height:100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    * {\n        width: 100%;\n        height: 100%;\n    }\n   \n`;\n\nexport const Hotspot = styled.button`\n    display: block;\n    width: 20px;\n    height: 20px;\n    border-radius: 10px;\n    border: 2px solid #D4177D;\n    background-color: white;\n    box-sizing: border-box;\n\n    :not(:defined) > * {\n        display: none;\n    }\n\n    &.selected {\n        background-color: #D4177D;\n        border: 2px solid white;\n        p {\n            display: block;\n        }\n    }\n    \n    &:not(.selected) {\n        background-colour: #00A8A9;\n        div {\n            display:none;\n        }\n    }\n`;\n\nexport const Annotation = styled.div`\n    background-color: #c7ffff;\n    position: absolute;\n    transform: translate(10px, 10px);\n    color: #0B2A49;\n    font-family: \"Muli\", sans-serif;\n    border-radius: 10px;\n    padding: 10px;\n    padding: 10px;\n    width: 150px;\n    height: auto;\n`","import React, {useState, useEffect} from \"react\";\nimport * as Styled from \"./styled\";\n\n\nconst ModelViewerObject = (props) => {\n\n\n    const [selectedHotspotId, setSelectedHotspotId] = useState(null);\n\n    useEffect(() => {\n        if(props.initialHotspot){\n            setSelectedHotspotId(props.initialHotspot);\n        }else{\n            if(selectedHotspotId === null){\n                setSelectedHotspotId(0);\n            }\n        }\n        return () => {\n            \n        }\n    }, [props.initialHotspot, selectedHotspotId])\n\n    const selectHotspot = (hotspotId) => {\n        //TODO: enable hotspot based on Id\n        if(selectedHotspotId === hotspotId){\n            return;\n        }\n        setSelectedHotspotId(hotspotId);\n        console.log(\"You just selected hotspot \"+hotspotId);\n        console.log(selectedHotspotId);\n    }\n\n    return (\n        <Styled.Container>\n            <model-viewer width={\"100%\"} ar camera-controls src={\"./assets/models/stethescope.gltf\"} alt=\"This is a 3D model\">\n                {props.hotspots.map((hotspot, index) => \n                    <Styled.Hotspot onClick={() => {selectHotspot(index)}} slot={\"hotspot-\"+index} className=\"hotspot\" className={selectedHotspotId === hotspot.id ? \"hotspot selected\" : \"hotspot\"} data-position={hotspot.position} data-normal={hotspot.normal}><Styled.Annotation>{hotspot.text}</Styled.Annotation></Styled.Hotspot>\n                )}\n            </model-viewer>\n        </Styled.Container>\n    )\n}\n\nexport default ModelViewerObject;","import React, { useState } from 'react';\nimport './App.css';\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faSyncAlt, faChevronCircleRight, faChevronCircleLeft, faCheckCircle, faInfo } from \"@fortawesome/free-solid-svg-icons\";\nimport Scene from \"./components/Scene/Scene\";\nimport Panel from \"./components/Panel/Panel\"\nimport InteractiveObject from './components/InteractiveObject/InteractiveObject';\nimport Message from './components/Message/Message';\nimport { StaticObject, StaticGroup } from './components/StaticObject/StaticObject';\nimport IconButton from \"./components/IconButton/IconButton\";\nimport ModelViewerObject from './components/ModelViewerObject/ModelViewerObject';\n\nlibrary.add(faSyncAlt, faChevronCircleRight, faChevronCircleLeft, faCheckCircle, faInfo);\n\n\nconst AppContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100vw;\n  height: 100vh;\n  background-color: #111b32;\n  justify-content: center;\n  align-items: center;\n  font-family: 'Muli', sans-serif;\n`;\n\nconst AppAlertMessageContainer = styled.div`\n  width: 100%;\n  color: white;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  font-size: 3rem;\n  text-align: center;\n  display: none;\n  @media screen and (orientation:portrait){\n    display: flex;\n  }\n`;\n\nconst DisplayInLandscapeOnly = styled.div`\n  display: none;\n  @media screen and (orientation:landscape){\n    display: flex;\n    width: 100%;\n  }\n`;\n\nconst AppHeader = styled.header`\n  width: 100%;\n  height: 100%;\n  display:flex;\n  flex-directoin: column;\n  justify-content: center;\n  align-items: center;\n  background-color: #111b32;\n  overflow: hidden;\n  position: relative;\n`;\n\nconst AppAlertMessage = styled.p`\n  padding: 20px;\n  font-size: 2rem;\n`\n\nconst StyledLogo = styled.img`\n  width: 100%;\n  height:100%;\n`;\n\n\nfunction App() {\n  const [selectedCharacter, setSelectedCharacter] = useState({}); //The string/path for the selected character image.\n  const [currentSceneId, setCurrentSceneId] = useState(0); //Used to denote the scene by its' ID.\n  const [viewingObject, setViewingObject] = useState(false); //Used to tell if there is an object being viewed, show viewing panel.\n  const [selectedObject, setSelectedObject] = useState(0); //The ACTUAL object being viewed.\n  const [currentQuestionId, setCurrentQuestionId] = useState(0); //QuestionId to get from questionslist.\n\n  const charactersList = [\n      {\n        img: \"./assets/images/People-01.svg\",\n        name: \"Lloyd\",\n        prof: \"Doctor\",\n        gender: \"m\",\n        position: {x:\"0px\", y:\"40px\"}\n      },\n      {\n        img: \"./assets/images/People-02.svg\",\n        name: \"Jane\",\n        prof: \"Nurse\",\n        gender: \"f\",\n        position: {x:\"0px\", y:\"30px\"}\n      },\n      {\n        img: \"./assets/images/People-03.svg\",\n        name: \"Sara\",\n        prof: \"Doctor\",\n        gender: \"f\",\n        position: {x:\"0px\", y:\"25px\"}\n      },\n      {\n        img: \"./assets/images/People-04.svg\",\n        name: \"Kayleigh\",\n        prof: \"Nurse\",\n        gender: \"f\",\n        position: {x:\"0px\", y:\"10px\"}\n      }\n    ];\n\n  const objectsList = [\n    {\n      name: \"Kit Bag\",\n      img: \"./assets/images/DrBag.svg\",\n      position: {x: \"29px\", y: \"215px\"},\n      width: \"80px\",\n      id: 0\n    },\n    {\n      name: \"Medicine\",\n      img: \"./assets/images/Medicine.svg\",\n      position: {x: \"710px\", y: \"57px\"},\n      width: \"20px\",\n      id: 1\n    },\n    {\n      name: \"Microscope\",\n      img: \"./assets/images/Microscope.svg\",\n      position: {x: \"569px\", y: \"109px\"},\n      width: \"34px\",\n      id: 2\n    },\n    {\n      name: \"Stethoscope\",\n      img: \"./assets/images/Stethoscope.svg\",\n      position: {x: \"640px\", y: \"149px\"},\n      width: \"70px\",\n      id: 3\n    },\n    {\n      name: \"Syringe\",\n      img: \"./assets/images/Syringe.svg\",\n      position: {x: \"500px\", y: \"144px\"},\n      width: \"50px\",\n      id: 4\n    },\n    {\n      name: \"Test Tubes\",\n      img: \"./assets/images/TestTubes.svg\",\n      position: {x: \"636px\", y: \"17px\"},\n      width: \"30px\",\n      id: 5\n    },\n    {\n      name: \"Thermometer\",\n      img: \"./assets/images/Thermometer.svg\",\n      position: {x: \"407px\", y: \"193px\"},\n      width: \"60px\",\n      id: 6\n    },\n    {\n      name: \"Plaster\",\n      img: \"./assets/images/Plaster.svg\",\n      position: {x: \"420px\", y: \"145px\"},\n      width: \"20px\",\n      id: 7\n    }\n  ];\n\n  const modelsList = [\n    {\n      name: \"Stethoscpoe\",\n      id: 3,\n      model: \"./assets/models/stethescope.gltf\",\n      hotspots: [\n        {\n          id: 0,\n          name: \"fact\",\n          position: \"3.677384827359253m -0.2472029312234838m 8.890203554547575m\",\n          normal: \"0.08766884984280378m -0.9438745001877323m 0.318457376524078m\",\n          text: `The word stethoscope is actually a Greek word that simply means \"I see the chest\"`,\n          audio: \"audio track to play here\"\n        },\n        {\n          id: 1,\n          name: \"fact\",\n          position: \"1.2183017240716496m 0.3070601693620567m -6.646682736388396m\",\n          normal: \"0.5838613128714414m 0.731809499772719m 0.35151219520016597m\",\n          text: \"The very first Stethoscope was a monaural device, meaning it was used with just one ear.\",\n          audio: \"audio track to play here\"\n        },\n        {\n          id: 2,\n          name: \"fact\",\n          position: \"10.107813664801204m -0.43046056471759186m 13.99390251610063m\",\n          normal: \"-0.09713558713884479m 0.9944575583593681m -0.040234839792345996m\",\n          text: \"The original use of the Stethoscope was simply to determine if someone was dead or not!\",\n          audio: \"audio track to play here\"\n        }\n      ]\n    },\n    {\n      name: \"Plaster\",\n      id: 8,\n      model: \"./assets/models/bandaid.gltf\",\n      hotspots: [\n        {\n          position: \"1 1 0.5\",\n          text: \"This is some text\",\n          audio: \"audio track to play here\"\n        },\n        {\n          position: \"1 1 0.5\",\n          text: \"This is some more text\",\n          audio: \"audio track to play here\"\n        },\n        {\n          position: \"1 1 0.5\",\n          text: \"This is some different text\",\n          audio: \"audio track to play here\"\n        },\n      ]\n    }\n  ];\n\n  const successText = \"Correct!\";\n  const failText = \"Incorrect.\";\n\n  const questionsList = [\n    {\n      id: 0,\n      questionText: `Listen to your heart-beat?`,\n      answerText: `A Stethoscope can help ${selectedCharacter.prof} ${selectedCharacter.name} hear your heart-beat.`\n    },\n    {\n      id: 1,\n      questionText: `Cover an open wound or cut?`,\n      answerText: `A Plaster is used to keep an open wound clean and safe.`\n    },\n    {\n      id: 2,\n      questionText: `Look in your ears?`,\n      answerText: `bla blah blah`\n    }\n  ]\n  \n  const selectCharacter = (charObject) => {\n    setSelectedCharacter(charObject);\n    setCurrentSceneId(2);\n  }\n\n  const getCurrentScene = () => {\n    return scenesList[currentSceneId];\n  }\n  \n  const selectObject = (objectId) => {\n    setSelectedObject(objectId);\n    setViewingObject(true);\n    setCurrentSceneId(4);\n  }\n\n  const getSelectedObject = () => {\n    return modelsList.find(model => model.id === selectedObject.id);\n  }\n\n  const getCurrentQuestion = () => {\n    return questionsList[currentQuestionId];\n  }\n\n  const IntroScene = (props) => {\n   return(\n     <Scene id={props.Id} isActive={true} sceneColour={\"#00A8A9\"}>\n      <Panel isVisible={true} width=\"80%\" height=\"70%\">\n        {charactersList.map((char, index) => \n          <InteractiveObject key={index} objID={index} onClick={()=>{selectCharacter(char)}} imgSrc={char.img} width={\"19%\"} height={\"auto\"} xpos={8+(22*index)+\"%\"} ypos={char.position.y}/>\n        )}\n      </Panel>\n      <Panel marginRect={\"-30px 0 0 0\"} isVisible={true} bgColour={\"#0C2A49\"} height={\"14%\"} width={\"70%\"}>\n        <Message fontSize={\"medium\"} messageText={getCurrentScene().messageText}/>\n      </Panel>\n    </Scene>\n   )\n  };\n\n  const DoctorScene = () => {\n    return (\n      <>\n        <StaticGroup width={\"100%\"} height={\"100%\"} xpos={\"0px\"} ypos={\"0px\"} zindex={\"1\"}>\n          {objectsList.map((obj,index) => \n            <StaticObject key={index} imgSrc={obj.img} width={obj.width} height={\"auto\"} xpos={obj.position.x} ypos={obj.position.y}/>\n          )}\n        </StaticGroup>\n        <StaticObject imgSrc={\"./assets/images/Background-01.svg\"} width={\"100%\"} height={\"100%\"} xpos={\"0px\"} ypos={\"0px\"} zindex={\"0\"}/>\n        <Panel isVisible={true} bgColour={\"#0C2A49\"} height={\"20%\"} width={\"90%\"} marginRect={\"40% 0 0 0\"}>\n          <Message fontSize={\"medium\"} messageText={getCurrentScene().messageText}/>\n          <IconButton icon={\"chevron-circle-right\"} marginRect={\"0 0 0 10px\"} onClick={() => {setCurrentSceneId(3)}}/>\n        </Panel>\n        <StaticObject zindex={20} imgSrc={selectedCharacter.img} width={\"30%\"} height={\"100%\"} xpos={\"-8px\"} ypos={\"90px\"}/>\n      </>\n    )\n  }\n\n\n  const FindScene = () => {\n    return (\n      <>\n        {objectsList.map((obj, index) => \n          <InteractiveObject onClick={() => selectObject(obj.id)} key={index} imgSrc={obj.img} width={obj.width} height={\"auto\"} xpos={obj.position.x} ypos={obj.position.y} zindex={\"1\"}/>\n        )}\n        <StaticObject imgSrc={\"./assets/images/Background-01.svg\"} width={\"100%\"} height={\"100%\"} xpos={\"0px\"} ypos={\"0px\"} zindex={\"0\"}/>\n        <Panel direction={\"column\"} isVisible={!viewingObject} bgColour={\"#0C2A49\"} height={\"20%\"} width={\"90%\"} marginRect={\"40% 0 0 0\"}>\n          <Message fontSize={\"small\"} messageText={getCurrentScene().messageText}/>\n          <Message bold={true} fontSize={\"medium\"} messageText={getCurrentQuestion().questionText}/>\n        </Panel>\n        <StaticObject isVisible={!viewingObject} zindex={20} imgSrc={selectedCharacter.img} width={\"30%\"} height={\"100%\"} xpos={\"-8px\"} ypos={\"90px\"}/>\n      </>\n    )\n  }\n\n  const LogoScene = () => {\n    return (\n      <StyledLogo onClick={()=> {\n        setCurrentSceneId(1);\n      }} src=\"./assets/images/DrWhatJnr_Intro-01.jpg\" />\n    );\n  }\n\n  const SuccessScene = () => {\n    return (\n      <>\n        <Panel width={\"90%\"} height={\"80%\"} isVisible={true}>\n          <ModelViewerObject hotspots={modelsList[0].hotspots}/>\n        </Panel>\n        <Panel pointerNone={true} direction={\"column\"} isVisible={true} bgColour={\"#0C2A49\"} height={\"20%\"} width={\"75%\"} marginRect={\"-80px 0 0 0\"} >\n          <Message messageText={successText} bold={true} textColour={\"#64C9C9\"} />\n          <Message messageText={getCurrentQuestion().answerText} fontSize={\"small\"}/>\n        </Panel>\n      </>\n    );\n  }\n\n\n  const scenesList = [\n    {\n      sceneContent: <LogoScene/>,\n      sceneColour: \"#0C2A49\",\n      sceneId: 0,\n      messageText: \"Who would you like to help today?\"\n    },\n    {\n      sceneContent: <IntroScene/>,\n      sceneColour: \"#00A8A9\",\n      sceneId: 1,\n      messageText: \"Who would you like to help today?\"\n    },\n    {\n      sceneContent: <DoctorScene/>,\n      sceneColour: \"#0C2A49\",\n      sceneId: 2,\n      messageText: `Let's help ${selectedCharacter.prof} ${selectedCharacter.name}!`\n    },\n    {\n      sceneContent: <FindScene/>,\n      sceneColour: \"#0C2A49\",\n      sceneId: 3,\n      messageText: `Can you find something that ${selectedCharacter.prof} ${selectedCharacter.name} would use to `,\n    },\n    {\n      sceneContent: <SuccessScene/>,\n      sceneColour: \"#3ABBBB\",\n      sceneId: 4\n    }\n  ];\n\n  \n\n  return (\n    <AppContainer className=\"App\">\n    <AppHeader>\n      <AppAlertMessageContainer>\n        <FontAwesomeIcon className=\"App-logo\" color={\"#3cb39f\"} icon={\"sync-alt\"} />\n        <AppAlertMessage>Please rotate your device - this experience requires landscape</AppAlertMessage>\n      </AppAlertMessageContainer>\n      <DisplayInLandscapeOnly>\n        {scenesList.map((scene, index) =>\n          <Scene key={index} sceneColour={scene.sceneColour} Id={scene.sceneId} isActive={currentSceneId === scene.sceneId}>\n            {scene.sceneContent}\n          </Scene>\n        )}\n      </DisplayInLandscapeOnly>\n      </AppHeader>\n    </AppContainer>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}